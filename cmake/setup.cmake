include(CheckCXXCompilerFlag)
if (NOT DEFINED HINAPE_WARN_AS_ERROR)
    set(HINAPE_WARN_AS_ERROR ON)
endif ()
if (MSVC)
    set(HINAPE_WARNINGS /W4 /permissive- /utf-8 /Zc:__cplusplus)
    if (HINAPE_WARN_AS_ERROR)
        list(APPEND HINAPE_WARNINGS /WX)
    endif ()
    set(HINAPE_PRIVATE_DEFINES _CRT_SECURE_NO_WARNINGS)
    set(HINAPE_RELEASE_OPTS $<$<CONFIG:Release>:/O2 /Ot /Oi /fp:fast>)
else ()
    set(HINAPE_WARNINGS -Wall -Wextra -Wpedantic)
    if (HINAPE_WARN_AS_ERROR)
        list(APPEND HINAPE_WARNINGS -Werror)
    endif ()
    set(HINAPE_RELEASE_OPTS $<$<CONFIG:Release>:-O3 -ffast-math -fomit-frame-pointer>)
endif ()

option(HINAPE_SUPPRESS_MISLEADING_INDENTATION "Suppress -Wmisleading-indentation warning" ON)
if (HINAPE_SUPPRESS_MISLEADING_INDENTATION AND NOT MSVC)
    check_cxx_compiler_flag("-Wno-misleading-indentation" HINA_HAVE_NO_MISLEADING_INDENTATION)
    if (HINA_HAVE_NO_MISLEADING_INDENTATION)
        list(APPEND HINAPE_WARNINGS -Wno-misleading-indentation -Wno-error=misleading-indentation)
    endif ()
endif ()

set(HINAPE_HAVE_AVX2 OFF)
set(HINAPE_AVX2_FLAGS "")
if (MSVC)
    check_cxx_compiler_flag("/arch:AVX2" HINA_MSVC_HAS_AVX2)
    if (HINA_MSVC_HAS_AVX2)
        set(HINAPE_HAVE_AVX2 ON)
        set(HINAPE_AVX2_FLAGS "/arch:AVX2")
    endif ()
else ()
    check_cxx_compiler_flag("-mavx2" HINA_GCC_HAS_MAVX2)
    check_cxx_compiler_flag("-mfma"  HINA_GCC_HAS_MFMA)
    if (HINA_GCC_HAS_MAVX2)
        set(HINAPE_HAVE_AVX2 ON)
        set(_f -mavx2)
        if (HINA_GCC_HAS_MFMA)
            list(APPEND _f -mfma)
        endif ()
        set(HINAPE_AVX2_FLAGS "${_f}")
    endif ()
endif ()
set(HINAPE_PUBLIC_DEFINES "")
if (HINAPE_HAVE_AVX2)
    list(APPEND HINAPE_PUBLIC_DEFINES HINAPE_HAVE_AVX2=1)
endif ()
message(STATUS "HinaPE setup: warnings='${HINAPE_WARNINGS}'")
message(STATUS "HinaPE setup: release_opts='${HINAPE_RELEASE_OPTS}'")
message(STATUS "HinaPE setup: have_avx2='${HINAPE_HAVE_AVX2}' avx2_flags='${HINAPE_AVX2_FLAGS}'")
message(STATUS "HinaPE setup: public_defines='${HINAPE_PUBLIC_DEFINES}' private_defines='${HINAPE_PRIVATE_DEFINES}'")
