include_guard(GLOBAL)
set(_HPE_VV_TAG "master")

if (NOT TARGET VulkanVisualizer::vulkan_visualizer)
    find_package(vulkan_visualizer CONFIG QUIET)
endif ()

if (NOT TARGET VulkanVisualizer::vulkan_visualizer)
    include(FetchContent)
    FetchContent_Declare(vulkan_visualizer
        GIT_REPOSITORY https://github.com/HinaPE/vulkan-visualizer.git
        GIT_TAG        ${_HPE_VV_TAG}
        GIT_SHALLOW    TRUE
        FIND_PACKAGE_ARGS)
    FetchContent_MakeAvailable(vulkan_visualizer)
endif ()
if (NOT TARGET VulkanVisualizer::vulkan_visualizer)
    if (TARGET vulkan_visualizer)
        add_library(VulkanVisualizer::vulkan_visualizer ALIAS vulkan_visualizer)
    elseif (TARGET vkviz)
        add_library(VulkanVisualizer::vulkan_visualizer ALIAS vkviz)
    endif ()
endif ()

function(_vv_copy_runtime_dlls target)
    if (NOT WIN32)
        return()
    endif ()
    set(_vv_candidates)
    if (TARGET VulkanVisualizer::vulkan_visualizer)
        list(APPEND _vv_candidates VulkanVisualizer::vulkan_visualizer)
    endif ()
    if (TARGET SDL3::SDL3)
        list(APPEND _vv_candidates SDL3::SDL3)
    elseif (TARGET SDL3::SDL3-shared)
        list(APPEND _vv_candidates SDL3::SDL3-shared)
    endif ()
    foreach(_c IN LISTS _vv_candidates)
        add_custom_command(TARGET ${target} POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:${_c}> $<TARGET_FILE_DIR:${target}>
            COMMAND_EXPAND_LISTS)
    endforeach()
endfunction()

function(use_vulkan_visualizer target)
    if (NOT TARGET ${target})
        message(FATAL_ERROR "use_vulkan_visualizer called with unknown target `${target}`")
    endif ()
    if (TARGET VulkanVisualizer::vulkan_visualizer)
        target_link_libraries(${target} PUBLIC VulkanVisualizer::vulkan_visualizer)
        target_compile_definitions(${target} PUBLIC HINAPE_HAVE_VULKAN_VISUALIZER=1)
        _vv_copy_runtime_dlls(${target})
    else ()
        message(STATUS "Vulkan visualizer not available; proceeding without it for `${target}`")
    endif ()
endfunction()
